/*
 * Home Project Blog Service
 * Blog for the Home Project engineers 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Post;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CurrentUserPostsApi
 */
@Ignore
public class CurrentUserPostsApiTest {

    private final CurrentUserPostsApi api = new CurrentUserPostsApi();

    
    /**
     * Get Post by ID and Current User
     *
     * Retrieves an existing Post associated with the specified ID and Current User.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPostByCurrentUserTest() throws ApiException {
        Long id = null;
        Post response = api.getPostByCurrentUser(id);

        // TODO: test validations
    }
    
    /**
     * Get posts by Current User
     *
     * Uses query keys to retrieve a subset of existing posts assosiated with Current User.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPostsByCurrentUserTest() throws ApiException {
        Long id = null;
        Long tagId = null;
        String tagName = null;
        String sort = null;
        Integer pageNum = null;
        Integer pageSize = null;
        List<Post> response = api.getPostsByCurrentUser(id, tagId, tagName, sort, pageNum, pageSize);

        // TODO: test validations
    }
    
    /**
     * Remove Post by Current User
     *
     * Deletes a Post associated with a specified ID and Current User.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removePostByCurrentUserTest() throws ApiException {
        Long id = null;
        api.removePostByCurrentUser(id);

        // TODO: test validations
    }
    
    /**
     * Update Post by Current User
     *
     * Updates information on a Post that exists in the system by the specified ID and Current User.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePostByCurrentUserTest() throws ApiException {
        Long id = null;
        Post post = null;
        Post response = api.updatePostByCurrentUser(id, post);

        // TODO: test validations
    }
    
}
